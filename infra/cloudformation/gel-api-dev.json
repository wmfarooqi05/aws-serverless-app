{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources":
    {
      "CompanyHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-companyHandler" },
        },
      "ActivitiesHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-activitiesHandler" },
        },
      "TeamHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-teamHandler" },
        },
      "EmailHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-emailHandler" },
        },
      "NotificationHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-notificationHandler" },
        },
      "CognitoOAuthHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-cognitoOAuthHandler" },
        },
      "ImportDataLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-importData" },
        },
      "BulkCognitoSignupLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-bulkCognitoSignup" },
        },
      "StreamRecordHelperLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-streamRecordHelper" },
        },
      "HandleDynamoStreamRecordsLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-handleDynamoStreamRecords",
            },
        },
      "SendWebSocketNotificationLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-sendWebSocketNotification",
            },
        },
      "GetMyPendingApprovalsLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-getMyPendingApprovals" },
        },
      "ApproveOrRejectRequestLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-approveOrRejectRequest",
            },
        },
      "HandleEBSchedulerLambdaInvokeLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-handleEBSchedulerLambdaInvoke",
            },
        },
      "CreateReminderLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-createReminder" },
        },
      "DeleteReminderLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-deleteReminder" },
        },
      "DailyReminderCleanupLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-dailyReminderCleanup" },
        },
      "WebSocketHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-webSocketHandler" },
        },
      "BroadcastMessageLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-broadcastMessage" },
        },
      "GetAllWebSocketConnectionsLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-getAllWebSocketConnections",
            },
        },
      "GoogleOauthHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-googleOauthHandler" },
        },
      "GoogleOauthCallbackHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-googleOauthCallbackHandler",
            },
        },
      "GoogleOauthExtendRefreshTokenLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-googleOauthExtendRefreshToken",
            },
        },
      "GoogleOauthTokenScopeLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-googleOauthTokenScope" },
        },
      "GetAllCalendarsLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-getAllCalendars" },
        },
      "CreateMeetingLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-createMeeting" },
        },
      "CreateAndSendEmailLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-createAndSendEmail" },
        },
      "SendBulkEmailsLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-sendBulkEmails" },
        },
      "ReceiveEmailHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-receiveEmailHandler" },
        },
      "GetEmployeesLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-getEmployees" },
        },
      "GetEmployeesWorkSummaryLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-getEmployeesWorkSummary",
            },
        },
      "SqsJobQueueInvokeHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-sqsJobQueueInvokeHandler",
            },
        },
      "BulkImportUsersProcessHandlerLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-bulkImportUsersProcessHandler",
            },
        },
      "UploadSignupBulkJobLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-uploadSignupBulkJob" },
        },
      "UpdateScheduleReminderLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-updateScheduleReminder",
            },
        },
      "GetSchedulerGroupsLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-getSchedulerGroups" },
        },
      "GetSchedulersLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-getSchedulers" },
        },
      "DeleteScheduleReminderLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            {
              "LogGroupName": "/aws/lambda/gel-api-dev-deleteScheduleReminder",
            },
        },
      "DeleteAllRemindersLogGroup":
        {
          "Type": "AWS::Logs::LogGroup",
          "Properties":
            { "LogGroupName": "/aws/lambda/gel-api-dev-deleteAllReminders" },
        },
      "IamRoleLambdaExecution":
        {
          "Type": "AWS::IAM::Role",
          "Properties":
            {
              "AssumeRolePolicyDocument":
                {
                  "Version": "2012-10-17",
                  "Statement":
                    [
                      {
                        "Effect": "Allow",
                        "Principal": { "Service": ["lambda.amazonaws.com"] },
                        "Action": ["sts:AssumeRole"],
                      },
                    ],
                },
              "Policies":
                [
                  {
                    "PolicyName":
                      { "Fn::Join": ["-", ["gel-api", "dev", "lambda"]] },
                    "PolicyDocument":
                      {
                        "Version": "2012-10-17",
                        "Statement":
                          [
                            {
                              "Effect": "Allow",
                              "Action":
                                ["logs:CreateLogStream", "logs:CreateLogGroup"],
                              "Resource":
                                [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gel-api-dev*:*",
                                  },
                                ],
                            },
                            {
                              "Effect": "Allow",
                              "Action": ["logs:PutLogEvents"],
                              "Resource":
                                [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gel-api-dev*:*:*",
                                  },
                                ],
                            },
                            {
                              "Effect": "Allow",
                              "Action": ["codedeploy:*"],
                              "Resource": "*",
                            },
                            {
                              "Effect": "Allow",
                              "Action":
                                [
                                  "xray:PutTraceSegments",
                                  "xray:PutTelemetryRecords",
                                ],
                              "Resource": ["*"],
                            },
                            {
                              "Effect": "Allow",
                              "Action": ["execute-api:ManageConnections"],
                              "Resource":
                                [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*",
                                  },
                                ],
                            },
                            {
                              "Effect": "Allow",
                              "Action":
                                [
                                  "dynamodb:GetRecords",
                                  "dynamodb:GetShardIterator",
                                  "dynamodb:DescribeStream",
                                  "dynamodb:ListStreams",
                                ],
                              "Resource":
                                [
                                  "arn:aws:dynamodb:ca-central-1:524073432557:table/Jobs/stream/2023-05-02T11:39:32.489",
                                ],
                            },
                            {
                              "Effect": "Allow",
                              "Action":
                                [
                                  "sqs:ReceiveMessage",
                                  "sqs:DeleteMessage",
                                  "sqs:GetQueueAttributes",
                                ],
                              "Resource":
                                [
                                  "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                                ],
                            },
                          ],
                      },
                  },
                ],
              "Path": "/",
              "RoleName":
                {
                  "Fn::Join":
                    [
                      "-",
                      [
                        "gel-api",
                        "dev",
                        { "Ref": "AWS::Region" },
                        "lambdaRole",
                      ],
                    ],
                },
              "ManagedPolicyArns":
                [
                  {
                    "Fn::Join":
                      [
                        "",
                        [
                          "arn:",
                          { "Ref": "AWS::Partition" },
                          ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
                        ],
                      ],
                  },
                ],
            },
        },
      "CompanyHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/companyHandler.zip",
                },
              "Handler": "src/functions/companies/express.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-companyHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["CompanyHandlerLogGroup"],
        },
      "ActivitiesHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/activitiesHandler.zip",
                },
              "Handler": "src/functions/activities/express.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-activitiesHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["ActivitiesHandlerLogGroup"],
        },
      "TeamHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/teamHandler.zip",
                },
              "Handler": "src/functions/teams/express.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-teamHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["TeamHandlerLogGroup"],
        },
      "EmailHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/emailHandler.zip",
                },
              "Handler": "src/functions/emails/express.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-emailHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:jobs-packages:3",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["EmailHandlerLogGroup"],
        },
      "NotificationHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/notificationHandler.zip",
                },
              "Handler": "src/functions/notifications/express.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-notificationHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["NotificationHandlerLogGroup"],
        },
      "CognitoOAuthHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/cognitoOAuthHandler.zip",
                },
              "Handler": "src/functions/auth/handler.preTokenGenerationHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-cognitoOAuthHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["CognitoOAuthHandlerLogGroup"],
        },
      "ImportDataLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/importData.zip",
                },
              "Handler": "src/functions/jobs/import.importData",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-importData",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:jobs-packages:3",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["ImportDataLogGroup"],
        },
      "BulkCognitoSignupLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/bulkCognitoSignup.zip",
                },
              "Handler": "src/functions/jobs/bulkSignupUpload.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-bulkCognitoSignup",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:jobs-packages:3",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["BulkCognitoSignupLogGroup"],
        },
      "StreamRecordHelperLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/streamRecordHelper.zip",
                },
              "Handler": "src/functions/jobs/dynamoDbStreamHandler.streamRecordHelper",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-streamRecordHelper",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:jobs-packages:3",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["StreamRecordHelperLogGroup"],
        },
      "HandleDynamoStreamRecordsLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/handleDynamoStreamRecords.zip",
                },
              "Handler": "src/functions/jobs/dynamoDbStreamHandler.handleStreamRecords",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-handleDynamoStreamRecords",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:jobs-packages:3",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["HandleDynamoStreamRecordsLogGroup"],
        },
      "SendWebSocketNotificationLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/sendWebSocketNotification.zip",
                },
              "Handler": "src/functions/pending_approvals/handler.sendWebSocketNotification",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-sendWebSocketNotification",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["SendWebSocketNotificationLogGroup"],
        },
      "GetMyPendingApprovalsLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/getMyPendingApprovals.zip",
                },
              "Handler": "src/functions/pending_approvals/handler.getMyPendingApprovals",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-getMyPendingApprovals",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GetMyPendingApprovalsLogGroup"],
        },
      "ApproveOrRejectRequestLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/approveOrRejectRequest.zip",
                },
              "Handler": "src/functions/pending_approvals/handler.approveOrRejectRequest",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-approveOrRejectRequest",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["ApproveOrRejectRequestLogGroup"],
        },
      "HandleEBSchedulerLambdaInvokeLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/handleEBSchedulerLambdaInvoke.zip",
                },
              "Handler": "src/functions/reminders/handler.handleEBSchedulerLambdaInvoke",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-handleEBSchedulerLambdaInvoke",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["HandleEBSchedulerLambdaInvokeLogGroup"],
        },
      "CreateReminderLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/createReminder.zip",
                },
              "Handler": "src/functions/reminders/handler.createReminder",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-createReminder",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["CreateReminderLogGroup"],
        },
      "DeleteReminderLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/deleteReminder.zip",
                },
              "Handler": "src/functions/reminders/handler.deleteReminder",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-deleteReminder",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["DeleteReminderLogGroup"],
        },
      "DailyReminderCleanupLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/dailyReminderCleanup.zip",
                },
              "Handler": "src/functions/reminders/handler.dailyReminderCleanup",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-dailyReminderCleanup",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["DailyReminderCleanupLogGroup"],
        },
      "WebSocketHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/webSocketHandler.zip",
                },
              "Handler": "src/functions/websocket/handler.webSocketHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-webSocketHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["WebSocketHandlerLogGroup"],
        },
      "BroadcastMessageLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/broadcastMessage.zip",
                },
              "Handler": "src/functions/websocket/handler.broadcastMessage",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-broadcastMessage",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["BroadcastMessageLogGroup"],
        },
      "GetAllWebSocketConnectionsLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/getAllWebSocketConnections.zip",
                },
              "Handler": "src/functions/websocket/handler.getAllConnections",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-getAllWebSocketConnections",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GetAllWebSocketConnectionsLogGroup"],
        },
      "GoogleOauthHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/googleOauthHandler.zip",
                },
              "Handler": "src/functions/google/oauth/handler.oauthHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-googleOauthHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GoogleOauthHandlerLogGroup"],
        },
      "GoogleOauthCallbackHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/googleOauthCallbackHandler.zip",
                },
              "Handler": "src/functions/google/oauth/handler.googleOauthCallbackHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-googleOauthCallbackHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GoogleOauthCallbackHandlerLogGroup"],
        },
      "GoogleOauthExtendRefreshTokenLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/googleOauthExtendRefreshToken.zip",
                },
              "Handler": "src/functions/google/oauth/handler.googleOauthExtendRefreshToken",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-googleOauthExtendRefreshToken",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GoogleOauthExtendRefreshTokenLogGroup"],
        },
      "GoogleOauthTokenScopeLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/googleOauthTokenScope.zip",
                },
              "Handler": "src/functions/google/oauth/handler.googleOauthTokenScope",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-googleOauthTokenScope",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GoogleOauthTokenScopeLogGroup"],
        },
      "GetAllCalendarsLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/getAllCalendars.zip",
                },
              "Handler": "src/functions/google/calendar/handler.getAllCalendars",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-getAllCalendars",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GetAllCalendarsLogGroup"],
        },
      "CreateMeetingLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/createMeeting.zip",
                },
              "Handler": "src/functions/google/calendar/handler.createMeeting",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-createMeeting",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["CreateMeetingLogGroup"],
        },
      "CreateAndSendEmailLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/createAndSendEmail.zip",
                },
              "Handler": "src/functions/google/gmail/handler.createAndSendEmail",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-createAndSendEmail",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["CreateAndSendEmailLogGroup"],
        },
      "SendBulkEmailsLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/sendBulkEmails.zip",
                },
              "Handler": "src/functions/emails/handler.sendBulkEmails",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-sendBulkEmails",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["SendBulkEmailsLogGroup"],
        },
      "ReceiveEmailHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/receiveEmailHandler.zip",
                },
              "Handler": "src/functions/emails/handler.receiveEmailHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-receiveEmailHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["ReceiveEmailHandlerLogGroup"],
        },
      "GetEmployeesLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/getEmployees.zip",
                },
              "Handler": "src/functions/employees/handler.getEmployees",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-getEmployees",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GetEmployeesLogGroup"],
        },
      "GetEmployeesWorkSummaryLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/getEmployeesWorkSummary.zip",
                },
              "Handler": "src/functions/employees/handler.getEmployeesWorkSummary",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-getEmployeesWorkSummary",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GetEmployeesWorkSummaryLogGroup"],
        },
      "SqsJobQueueInvokeHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/sqsJobQueueInvokeHandler.zip",
                },
              "Handler": "src/functions/sqs/handler.sqsJobQueueInvokeHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-sqsJobQueueInvokeHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:googleapis_111_0_0:2",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["SqsJobQueueInvokeHandlerLogGroup"],
        },
      "BulkImportUsersProcessHandlerLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/bulkImportUsersProcessHandler.zip",
                },
              "Handler": "src/functions/jobs/bulkSignupProcess.bulkImportUsersProcessHandler",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-bulkImportUsersProcessHandler",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:jobs-packages:3",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["BulkImportUsersProcessHandlerLogGroup"],
        },
      "UploadSignupBulkJobLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/uploadSignupBulkJob.zip",
                },
              "Handler": "src/functions/jobs/bulkSignupProcess.uploadSignupBulkJob",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-uploadSignupBulkJob",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:jobs-packages:3",
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["UploadSignupBulkJobLogGroup"],
        },
      "UpdateScheduleReminderLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/updateScheduleReminder.zip",
                },
              "Handler": "src/functions/reminders/handler.updateScheduleReminder",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-updateScheduleReminder",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["UpdateScheduleReminderLogGroup"],
        },
      "GetSchedulerGroupsLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/getSchedulerGroups.zip",
                },
              "Handler": "src/functions/reminders/handler.getSchedulerGroups",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-getSchedulerGroups",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GetSchedulerGroupsLogGroup"],
        },
      "GetSchedulersLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/getSchedulers.zip",
                },
              "Handler": "src/functions/reminders/handler.getSchedulers",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-getSchedulers",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["GetSchedulersLogGroup"],
        },
      "DeleteScheduleReminderLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/deleteScheduleReminder.zip",
                },
              "Handler": "src/functions/reminders/handler.deleteScheduleReminder",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-deleteScheduleReminder",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["DeleteScheduleReminderLogGroup"],
        },
      "DeleteAllRemindersLambdaFunction":
        {
          "Type": "AWS::Lambda::Function",
          "Properties":
            {
              "Code":
                {
                  "S3Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                  "S3Key": "serverless/gel-api/dev/1684665921031-2023-05-21T10:45:21.031Z/deleteAllReminders.zip",
                },
              "Handler": "src/functions/reminders/handler.deleteAllReminders",
              "Runtime": "nodejs18.x",
              "FunctionName": "gel-api-dev-deleteAllReminders",
              "MemorySize": 1024,
              "Timeout": 10,
              "TracingConfig": { "Mode": "Active" },
              "Environment":
                {
                  "Variables":
                    {
                      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                      "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                      "REGION": "ca-central-1",
                      "STACK_NAME": "dev",
                      "JOB_QUEUE": "job-queue-dev",
                      "STAGE": "dev",
                      "TIMEOUT": "10",
                      "DB_HOSTNAME": "global-employement-database.cyb3arxab5e4.ca-central-1.rds.amazonaws.com",
                      "DB_NAME": "geldbtest",
                      "DB_USERNAME": "postgres",
                      "DB_PASSWORD": "postgres_qasid123",
                      "DB_PORT": "5432",
                      "EMPLOYEES_TABLE": "employees",
                      "ACTIVITIES_TABLE": "activities",
                      "COMPANIES_TABLE": "companies",
                      "PENDING_APPROVAL_TABLE": "pending_approvals",
                      "NOTIFICATIONS_TABLE": "notifications",
                      "REMINDERS_TABLE": "reminders",
                      "AUTH_TOKENS_TABLE": "auth_tokens",
                      "UPDATE_HISTORY_TABLE": "update_history",
                      "TEAMS_TABLE": "teams",
                      "ACCESS_PERMISSIONS_TABLE": "access_permissions",
                      "EMPLOYEE_COMPANY_INTERACTIONS_TABLE": "employee_company_interactions",
                      "TEAM_COMPANY_INTERACTIONS_TABLE": "team_company_interactions",
                      "DEPLOYMENT_BUCKET": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
                      "ELASTIC_CACHE_SERVER": "redis://gel-api-dev-elastic-cache.ufa09u.ng.0001.cac1.cache.amazonaws.com:6379",
                      "APIG_WS_API_ID": "2tcizg95hl",
                      "AWS_SCHEDULER_REGION": "ca-central-1",
                      "REMINDER_TARGET_ROLE_ARN": "arn:aws:iam::524073432557:role/gel-api-dev-ca-central-1-lambdaRole",
                      "REMINDER_SCHEDULER_GROUP_ARN": "arn:aws:scheduler:ca-central-1:524073432557:schedule-group/activity_scheduler",
                      "REMINDER_SCHEDULER_GROUP_NAME": "activity_scheduler",
                      "REMINDER_TARGET_LAMBDA": "arn:aws:lambda:ca-central-1:524073432557:function:gel-api-dev-handleEBSchedulerLambdaInvoke",
                      "JOB_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "MAIL_QUEUE_ARN": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
                      "ConnectionTableName": "Connections",
                      "ConnectionTablePartitionKey": "employeeId",
                      "APP_BASE_URL": "https://m0xca8zcy6.execute-api.ca-central-1.amazonaws.com",
                      "VPC_ID": "vpc-05126227d046548e1",
                      "PRIVATE_SUBNET_1": "subnet-0bf9443e724778d81",
                      "PRIVATE_SUBNET_2": "subnet-029afa431f7f325f6",
                      "PRIVATE_SUBNET_3": "subnet-0553628384d3adf0a",
                      "PUBLIC_SUBNET_1": "subnet-02752e6de3a0e8a16",
                      "PUBLIC_SUBNET_2": "subnet-0803209af3915f116",
                      "VPC_SECURITY_GROUP": "sg-0f35fcd0a25a50f4e",
                      "GOOGLE_OAUTH_CLIENT_ID": "512301118477-fnuaisl7mcqdk8iirtrau4c25suedtot.apps.googleusercontent.com",
                      "GOOGLE_OAUTH_CLIENT_SECRET": "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",
                      "JOBS_FOLDER": "jobs",
                      "AWS_ACCOUNT_ID": "524073432557",
                      "MAIL_QUEUE_NAME": "job-queue-dev",
                      "COGNITO_USER_POOL_ID": "ca-central-1_0BjGZxtC1",
                      "CANADA_DEFAULT_TIMEZONE": "America/Toronto",
                      "COGNITO_CLIENT_ID": "2abd3pabbdnhknm2m6l238cp82",
                      "USE_LOCAL_SQS": "true",
                    },
                },
              "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
              "VpcConfig":
                {
                  "SecurityGroupIds": ["sg-0f35fcd0a25a50f4e"],
                  "SubnetIds":
                    [
                      "subnet-0bf9443e724778d81",
                      "subnet-029afa431f7f325f6",
                      "subnet-0553628384d3adf0a",
                    ],
                },
              "Layers":
                [
                  "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
                ],
            },
          "DependsOn": ["DeleteAllRemindersLogGroup"],
        },
      "ActivitiesHandlerLambdaVersione3jGEQAFxIPpyshFa3UzajtuxkmRPXXtcYn34S9qI":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "ActivitiesHandlerLambdaFunction" },
              "CodeSha256": "iZQqdWuJ2J/7znexG4teDq61s1sLjqASx1U9gJYJU9I=",
            },
        },
      "TeamHandlerLambdaVersiondUlovsCiCXBfLZPeradmc12aerpgQPMcpDmLDTjSA":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "TeamHandlerLambdaFunction" },
              "CodeSha256": "64eNQxKtff8Ar6vfDXwOHqK1OTg0DJZFdUTb6e/cHTg=",
            },
        },
      "CompanyHandlerLambdaVersionS2nhditUn3WDxADsJ8mtsZYcObBfyvTcT2AXDGXbcE":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "CompanyHandlerLambdaFunction" },
              "CodeSha256": "exFS/LjTSQjIVKBQrjOWFW2U3OGrDvEBlRphS+Sxlm8=",
            },
        },
      "NotificationHandlerLambdaVersion0cxyGJz49OXyHkiXC4w5KFY2GGy5mRaMLEIN1PujxBk":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "NotificationHandlerLambdaFunction" },
              "CodeSha256": "ioa4pbeIGdh9exQU0fdnheA0F8v8FJpLawkAfOlKRNM=",
            },
        },
      "CognitoOAuthHandlerLambdaVersionVEuaNrJtS7ESoc2ucjlC2m01R9XFuWRoeDYkLAaP1tM":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "CognitoOAuthHandlerLambdaFunction" },
              "CodeSha256": "3igWjP67ybAk0ZxfOHSnSM4V13QyZeno9dtlVy5iQYc=",
            },
        },
      "BulkCognitoSignupLambdaVersionsEPlfTpreEQw1RuzEoDFQ8lGXN152s8eVQGyJ3fE4A":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "BulkCognitoSignupLambdaFunction" },
              "CodeSha256": "N/QelFGaDiFtvQ0AK2qGtBWgPGWoopLhoWSM4WdUVQU=",
            },
        },
      "SendWebSocketNotificationLambdaVersionJDW2gCME4jBUnqOMnNiEobCb5tIgOXm53DILwyMlw":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName":
                { "Ref": "SendWebSocketNotificationLambdaFunction" },
              "CodeSha256": "Soe3toRImvOuE0V8oP7RSC6LkkqJ1DWQI+44NfDapp8=",
            },
        },
      "GetMyPendingApprovalsLambdaVersiontMLkzPyX3bmT0cm6V21gAhMqqqQBabiwSxFRrfakeU":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "GetMyPendingApprovalsLambdaFunction" },
              "CodeSha256": "Soe3toRImvOuE0V8oP7RSC6LkkqJ1DWQI+44NfDapp8=",
            },
        },
      "ApproveOrRejectRequestLambdaVersionTOdaUatenz1tC7NsTZUNrPFrLypMDCdXZKHSFPxYk":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "ApproveOrRejectRequestLambdaFunction" },
              "CodeSha256": "Soe3toRImvOuE0V8oP7RSC6LkkqJ1DWQI+44NfDapp8=",
            },
        },
      "HandleEBSchedulerLambdaInvokeLambdaVersionbTjarUYUAtVSW9n9PdRNqfLT9QOVF5a3rlz9T1RYKJM":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName":
                { "Ref": "HandleEBSchedulerLambdaInvokeLambdaFunction" },
              "CodeSha256": "g4u7XRF69izQfkqwbi0ackmebjBYAylSMvOupPdfPCo=",
            },
        },
      "CreateReminderLambdaVersionTtsvLcTcOIgPNLvbGDg7vg4SSMH9Ho0mIbsxPPxYoU":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "CreateReminderLambdaFunction" },
              "CodeSha256": "g4u7XRF69izQfkqwbi0ackmebjBYAylSMvOupPdfPCo=",
            },
        },
      "DeleteReminderLambdaVersioncSd544vbsq52cYRqyABYeahlucgAPFZSOQfHAwofHAI":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "DeleteReminderLambdaFunction" },
              "CodeSha256": "g4u7XRF69izQfkqwbi0ackmebjBYAylSMvOupPdfPCo=",
            },
        },
      "DailyReminderCleanupLambdaVersionJFZlaO6tHSSbd87i5TswgjwxVTMJXLb049EKJWYLB0":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "DailyReminderCleanupLambdaFunction" },
              "CodeSha256": "g4u7XRF69izQfkqwbi0ackmebjBYAylSMvOupPdfPCo=",
            },
        },
      "BroadcastMessageLambdaVersionj7aaEYzrA7G0R8A2SZX3kTcHXMXOsdiMMzFPIhoYZMs":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "BroadcastMessageLambdaFunction" },
              "CodeSha256": "bikcC4v7ftb1donJ2ZvT2yuFqr9KLuWAxJW3mlGcsDY=",
            },
        },
      "WebSocketHandlerLambdaVersionO8FYIPt8KPRu59FAZ68lXUVY7YvtJKSWjI7ednUo":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "WebSocketHandlerLambdaFunction" },
              "CodeSha256": "bikcC4v7ftb1donJ2ZvT2yuFqr9KLuWAxJW3mlGcsDY=",
            },
        },
      "GoogleOauthHandlerLambdaVersionnPA1c6dXCyIiCTvzC37OMMRTSqX7Jsbm7ADFr8DFE":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "GoogleOauthHandlerLambdaFunction" },
              "CodeSha256": "Ors4we5eaNpHexaPgffQcb14AGJV9t/JrKROyWNMslI=",
            },
        },
      "GoogleOauthExtendRefreshTokenLambdaVersionGDvRn6b1d8amx7eW22iCjauAgTjcgtjKA8XDJaMU":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName":
                { "Ref": "GoogleOauthExtendRefreshTokenLambdaFunction" },
              "CodeSha256": "Ors4we5eaNpHexaPgffQcb14AGJV9t/JrKROyWNMslI=",
            },
        },
      "GoogleOauthCallbackHandlerLambdaVersionn2R9Vq3fDhOWE5eDbU4PqwNtS2nnZRC7jk6d4hsozec":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName":
                { "Ref": "GoogleOauthCallbackHandlerLambdaFunction" },
              "CodeSha256": "Ors4we5eaNpHexaPgffQcb14AGJV9t/JrKROyWNMslI=",
            },
        },
      "GoogleOauthTokenScopeLambdaVersionYoqVsgFUM9orX8MnTQCChabDyT4oEflyMMZmpjJIZF8":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "GoogleOauthTokenScopeLambdaFunction" },
              "CodeSha256": "Ors4we5eaNpHexaPgffQcb14AGJV9t/JrKROyWNMslI=",
            },
        },
      "GetAllWebSocketConnectionsLambdaVersionIYH1KO7upwqxge90e1FJO5ARS6AiDypQjFZGbtJevY":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName":
                { "Ref": "GetAllWebSocketConnectionsLambdaFunction" },
              "CodeSha256": "bikcC4v7ftb1donJ2ZvT2yuFqr9KLuWAxJW3mlGcsDY=",
            },
        },
      "GetAllCalendarsLambdaVersionmFQVR0mECVszpVidfuWM9UVKYPOrljUmk8Qktd9ugo":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "GetAllCalendarsLambdaFunction" },
              "CodeSha256": "k90G56PAaDR5n7MFj6ay/8AmbAKX2vNrHEEcBAogeHk=",
            },
        },
      "CreateAndSendEmailLambdaVersionCznMWNSCicIsZkoeggBUkZGwTa38wd7Du6se7TweA":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "CreateAndSendEmailLambdaFunction" },
              "CodeSha256": "Yt+0Zvq5E5VLHQ416AxU5uwMf0nkFJsPqSM8gEji04c=",
            },
        },
      "CreateMeetingLambdaVersiong0DN6akY1Tbp73IncJfSb4RzE7DGBWTShck64k":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "CreateMeetingLambdaFunction" },
              "CodeSha256": "k90G56PAaDR5n7MFj6ay/8AmbAKX2vNrHEEcBAogeHk=",
            },
        },
      "ReceiveEmailHandlerLambdaVersion8xZDKtammL0OvKFF3efAK3AymiP0QqGcyIvCzzXa48A":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "ReceiveEmailHandlerLambdaFunction" },
              "CodeSha256": "9fnYWb3erH43u6AwwfeXg/9PAXA3eTiNBPSdP4H5E/A=",
            },
        },
      "GetEmployeesLambdaVersion1iF9rkxVWgNx6JYXocjvzlgQPciUkeYIsu93dZfs":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "GetEmployeesLambdaFunction" },
              "CodeSha256": "6MbY5HSdI2HfdCcX2RX1FMpBuHhW5hNxuVhcUAMJdEQ=",
            },
        },
      "GetEmployeesWorkSummaryLambdaVersionMHhN0OrEAhibqbWBi5kcJ8cJhxhrCv0HZxA4p9KKqg":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName":
                { "Ref": "GetEmployeesWorkSummaryLambdaFunction" },
              "CodeSha256": "6MbY5HSdI2HfdCcX2RX1FMpBuHhW5hNxuVhcUAMJdEQ=",
            },
        },
      "SendBulkEmailsLambdaVersionuZ5OABIiPX5pJkar0oTsusvPlVnpoDMsjr3NjldH3ok":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "SendBulkEmailsLambdaFunction" },
              "CodeSha256": "9fnYWb3erH43u6AwwfeXg/9PAXA3eTiNBPSdP4H5E/A=",
            },
        },
      "BulkImportUsersProcessHandlerLambdaVersionFwNcVCO7xuvINWwApIeqE2WTCpUfwcyfLMffXBFtg":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName":
                { "Ref": "BulkImportUsersProcessHandlerLambdaFunction" },
              "CodeSha256": "51TgjJyBI71723a9MJFd6cElHlFt90uU091nzwN7y0g=",
            },
        },
      "UploadSignupBulkJobLambdaVersionPL4dbFoRAr4myoLXtZfuvqWdNhZXa8IEOGZVNoGojY":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "UploadSignupBulkJobLambdaFunction" },
              "CodeSha256": "51TgjJyBI71723a9MJFd6cElHlFt90uU091nzwN7y0g=",
            },
        },
      "UpdateScheduleReminderLambdaVersionbrzQYpMhC7GDzAtVWUo2WKgkfWdZjghNBOosb6tbpPo":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "UpdateScheduleReminderLambdaFunction" },
              "CodeSha256": "g4u7XRF69izQfkqwbi0ackmebjBYAylSMvOupPdfPCo=",
            },
        },
      "GetSchedulersLambdaVersionacrGotWgzRCQqayZiLL7SVwa53YYNGXEAgOMUFDtYUU":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "GetSchedulersLambdaFunction" },
              "CodeSha256": "g4u7XRF69izQfkqwbi0ackmebjBYAylSMvOupPdfPCo=",
            },
        },
      "GetSchedulerGroupsLambdaVersionjfLB2GvyTe7qAVkkambM2Npr1shzOzDrbpCzyHtXSmg":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "GetSchedulerGroupsLambdaFunction" },
              "CodeSha256": "g4u7XRF69izQfkqwbi0ackmebjBYAylSMvOupPdfPCo=",
            },
        },
      "DeleteAllRemindersLambdaVersioni7wQlt5gfA7v3mcE267hYfZqKD0QoZhB2qAtNzEw":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "DeleteAllRemindersLambdaFunction" },
              "CodeSha256": "g4u7XRF69izQfkqwbi0ackmebjBYAylSMvOupPdfPCo=",
            },
        },
      "DeleteScheduleReminderLambdaVersionNuebn7UMSm34NxMxlmi3vISwE4CPu8QvSWJBjhNY9A":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "DeleteScheduleReminderLambdaFunction" },
              "CodeSha256": "g4u7XRF69izQfkqwbi0ackmebjBYAylSMvOupPdfPCo=",
            },
        },
      "EmailHandlerLambdaVersionBCb7Szc8ikuwhybahBbwPhjaYXmXom8Icc2dpFjvvvM":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "EmailHandlerLambdaFunction" },
              "CodeSha256": "P7kPn78077OZu26590HlrXgZp2rN7ZE7Uabh7nx+30Y=",
            },
        },
      "StreamRecordHelperLambdaVersionvyFNcnsy0CPhIE5BNnbJ9NFNn8WedcyUKAL7pS7Eb4":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "StreamRecordHelperLambdaFunction" },
              "CodeSha256": "5rMaDbP0ecT5ukB4HAH16WAIi+HbCCqgcy+DjyTEpW0=",
            },
        },
      "HandleDynamoStreamRecordsLambdaVersionqnYfaybUmjRd3eSmCeejXRSqFLsaESaqKNiIDahsTzQ":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName":
                { "Ref": "HandleDynamoStreamRecordsLambdaFunction" },
              "CodeSha256": "5rMaDbP0ecT5ukB4HAH16WAIi+HbCCqgcy+DjyTEpW0=",
            },
        },
      "SqsJobQueueInvokeHandlerLambdaVersionXjPGJ14Np0px9rJolwZ1Q7TafCMa1fCRefR6wyA6Q":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName":
                { "Ref": "SqsJobQueueInvokeHandlerLambdaFunction" },
              "CodeSha256": "H2EvaPJVzfGZRsXAhRCiN5nn6AGSOhmpuah7wK+oDQ4=",
            },
        },
      "ImportDataLambdaVersionH4TlO4Q7zUFHXezaDD2BtjiYM2Sx0L9zudDzAjfqKMc":
        {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties":
            {
              "FunctionName": { "Ref": "ImportDataLambdaFunction" },
              "CodeSha256": "uQ19p3Jya7nLfhgVF5jhpSQwutNcnIOcyJE57oTsiZk=",
            },
        },
      "ApiGatewayRestApi":
        {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties":
            {
              "Name": "gel-api-dev",
              "EndpointConfiguration": { "Types": ["EDGE"] },
              "Policy": "",
              "MinimumCompressionSize": 1024,
            },
        },
      "ApiGatewayResourceCompany":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "company",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompany" },
              "PathPart": "{companyId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarAssign":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "PathPart": "assign",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarContact":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "PathPart": "contact",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarContactContactidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarContact" },
              "PathPart": "{contactId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarContactContactidVarEmail":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarContactContactidVar",
                },
              "PathPart": "email",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarContactContactidVarEmailEmailidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarContactContactidVarEmail",
                },
              "PathPart": "{emailId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarEmployeeDashinteractions":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "PathPart": "employee-interactions",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarConvert":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "PathPart": "convert",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarNotes":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "PathPart": "notes",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarNotesNotesidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarNotes" },
              "PathPart": "{notesId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyCompanyidVarActivities":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "PathPart": "activities",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanyAssign":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompany" },
              "PathPart": "assign",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompanies":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "companies",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompaniesEmployee":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompanies" },
              "PathPart": "employee",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceCompaniesEmployeeEmployeeidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceCompaniesEmployee" },
              "PathPart": "{employeeId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmailDashlist":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "email-list",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmailDashlistEmaillistidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceEmailDashlist" },
              "PathPart": "{emailListId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceContact":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "contact",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceContactContactidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceContact" },
              "PathPart": "{contactId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceActivities":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "activities",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceActivitiesStale":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceActivities" },
              "PathPart": "stale",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceMyDashactivities":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "my-activities",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceTopDashactivities":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "top-activities",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceTopDashactivitiesCompanyidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceTopDashactivities" },
              "PathPart": "{companyId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceMyDashactivitiesDashbyDashstatusDashtime":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "my-activities-by-status-time",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceActivity":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "activity",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceActivityActivityidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceActivity" },
              "PathPart": "{activityId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceActivityActivityidVarStatus":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceActivityActivityidVar" },
              "PathPart": "status",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceActivityActivityidVarStatusStatusVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Ref": "ApiGatewayResourceActivityActivityidVarStatus" },
              "PathPart": "{status}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceActivityActivityidVarRemarks":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceActivityActivityidVar" },
              "PathPart": "remarks",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceActivityActivityidVarRemarksRemarksidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Ref": "ApiGatewayResourceActivityActivityidVarRemarks" },
              "PathPart": "{remarksId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceTeam":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "team",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceTeamTeamidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceTeam" },
              "PathPart": "{teamId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmails":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "emails",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmailsTemplate":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceEmails" },
              "PathPart": "template",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmailsTemplateTemplateidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceEmailsTemplate" },
              "PathPart": "{templateId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmailsTemplateTemplateidVarContent":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Ref": "ApiGatewayResourceEmailsTemplateTemplateidVar" },
              "PathPart": "content",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmailsSendDashbulk":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceEmails" },
              "PathPart": "send-bulk",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmailsTemplates":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceEmails" },
              "PathPart": "templates",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceSendDashemail":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "send-email",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmailsDashbyDashcontact":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "emails-by-contact",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmailsDashbyDashcontactContactemailVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Ref": "ApiGatewayResourceEmailsDashbyDashcontact" },
              "PathPart": "{contactEmail}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceNotification":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "notification",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceNotificationIdVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceNotification" },
              "PathPart": "{id}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceTokenDashgeneration":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "token-generation",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceJobs":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "jobs",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceJobsImportdata":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceJobs" },
              "PathPart": "importData",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceJobsBulkDashsignup":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceJobs" },
              "PathPart": "bulk-signup",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceJobsBulkDashsignupDashprocess":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceJobs" },
              "PathPart": "bulk-signup-process",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceJobsBulkDashsignupDashupload":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceJobs" },
              "PathPart": "bulk-signup-upload",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceDynamoDashstream":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "dynamo-stream",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourcePendingDashapproval":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "pending-approval",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourcePendingDashapprovalSendDashnotif":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourcePendingDashapproval" },
              "PathPart": "send-notif",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourcePendingDashapprovalRequestidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourcePendingDashapproval" },
              "PathPart": "{requestId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourcePendingDashapprovalRequestidVarApproveDashreject":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Ref": "ApiGatewayResourcePendingDashapprovalRequestidVar" },
              "PathPart": "approve-reject",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceReminder":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "reminder",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceReminderReminderidVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceReminder" },
              "PathPart": "{reminderId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceReminderCleanup":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceReminder" },
              "PathPart": "cleanup",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceWebsocket":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "websocket",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceWebsocketBroadcast":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceWebsocket" },
              "PathPart": "broadcast",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceWebsocketGetDashconnections":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceWebsocket" },
              "PathPart": "get-connections",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogle":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "google",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleOauth":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceGoogle" },
              "PathPart": "oauth",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleOauthCallback":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceGoogleOauth" },
              "PathPart": "callback",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleOauthExtendtoken":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceGoogleOauth" },
              "PathPart": "extendToken",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleOauthGoogleoauthtokenscope":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceGoogleOauth" },
              "PathPart": "googleOauthTokenScope",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleCalendars":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceGoogle" },
              "PathPart": "calendars",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleCalendar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceGoogle" },
              "PathPart": "calendar",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleCalendarCalendaridVar":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceGoogleCalendar" },
              "PathPart": "{calendarId}",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleCalendarCalendaridVarMeeting":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Ref": "ApiGatewayResourceGoogleCalendarCalendaridVar" },
              "PathPart": "meeting",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleGmail":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceGoogle" },
              "PathPart": "gmail",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceGoogleGmailCreateDashandDashsendDashemail":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId": { "Ref": "ApiGatewayResourceGoogleGmail" },
              "PathPart": "create-and-send-email",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceBulkDashemail":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "bulk-email",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceReceiveDashemailDashtest":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "receive-email-test",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmployees":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "employees",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceEmployeesDashsummary":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "employees-summary",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceJobDashqueue":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "job-queue",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceScheduler":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "scheduler",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayResourceSchedulers":
        {
          "Type": "AWS::ApiGateway::Resource",
          "Properties":
            {
              "ParentId":
                { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
              "PathPart": "schedulers",
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceCompany" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompaniesOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceCompanies" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarAssignOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarAssign" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyAssignOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceCompanyAssign" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompaniesEmployeeEmployeeidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompaniesEmployeeEmployeeidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarContactOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarContact" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarContactContactidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarContactContactidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarContactContactidVarEmailOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarContactContactidVarEmail",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarContactContactidVarEmailEmailidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarContactContactidVarEmailEmailidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarEmployeeDashinteractionsOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarEmployeeDashinteractions",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarConvertOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarConvert" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarNotesOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarNotes" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarNotesNotesidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarNotesNotesidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmailDashlistOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceEmailDashlist" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmailDashlistEmaillistidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceEmailDashlistEmaillistidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodContactOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceContact" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodContactContactidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceContactContactidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyCompanyidVarActivitiesOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarActivities" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodActivitiesOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceActivities" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodMyDashactivitiesOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceMyDashactivities" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodTopDashactivitiesCompanyidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceTopDashactivitiesCompanyidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodMyDashactivitiesDashbyDashstatusDashtimeOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceMyDashactivitiesDashbyDashstatusDashtime",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodActivitiesStaleOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceActivitiesStale" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodActivityActivityidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceActivityActivityidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodActivityOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceActivity" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodActivityActivityidVarStatusStatusVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceActivityActivityidVarStatusStatusVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodActivityActivityidVarRemarksOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceActivityActivityidVarRemarks" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodActivityActivityidVarRemarksRemarksidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceActivityActivityidVarRemarksRemarksidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodTeamOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceTeam" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodTeamTeamidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceTeamTeamidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmailsTemplateOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceEmailsTemplate" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmailsSendDashbulkOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceEmailsSendDashbulk" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmailsTemplateTemplateidVarContentOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceEmailsTemplateTemplateidVarContent",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmailsTemplateTemplateidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceEmailsTemplateTemplateidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmailsTemplatesOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceEmailsTemplates" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodSendDashemailOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceSendDashemail" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmailsDashbyDashcontactContactemailVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceEmailsDashbyDashcontactContactemailVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodNotificationOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT,POST,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceNotification" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodNotificationIdVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceNotificationIdVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodTokenDashgenerationOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceTokenDashgeneration" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodJobsImportdataOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceJobsImportdata" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodJobsBulkDashsignupOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceJobsBulkDashsignup" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodDynamoDashstreamOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceDynamoDashstream" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodPendingDashapprovalSendDashnotifOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourcePendingDashapprovalSendDashnotif" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodPendingDashapprovalOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourcePendingDashapproval" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodPendingDashapprovalRequestidVarApproveDashrejectOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourcePendingDashapprovalRequestidVarApproveDashreject",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodReminderOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceReminder" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodReminderReminderidVarOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceReminderReminderidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodReminderCleanupOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceReminderCleanup" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodWebsocketBroadcastOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceWebsocketBroadcast" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodWebsocketGetDashconnectionsOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceWebsocketGetDashconnections" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodGoogleOauthOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceGoogleOauth" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodGoogleOauthCallbackOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceGoogleOauthCallback" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodGoogleOauthExtendtokenOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceGoogleOauthExtendtoken" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodGoogleOauthGoogleoauthtokenscopeOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceGoogleOauthGoogleoauthtokenscope" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodGoogleCalendarsOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceGoogleCalendars" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodGoogleCalendarCalendaridVarMeetingOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceGoogleCalendarCalendaridVarMeeting",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodGoogleGmailCreateDashandDashsendDashemailOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceGoogleGmailCreateDashandDashsendDashemail",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodBulkDashemailOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceBulkDashemail" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodReceiveDashemailDashtestOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceReceiveDashemailDashtest" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmployeesOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceEmployees" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodEmployeesDashsummaryOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceEmployeesDashsummary" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodJobDashqueueOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceJobDashqueue" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodJobsBulkDashsignupDashprocessOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceJobsBulkDashsignupDashprocess" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodJobsBulkDashsignupDashuploadOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId":
                { "Ref": "ApiGatewayResourceJobsBulkDashsignupDashupload" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodSchedulerOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceScheduler" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodSchedulersOptions":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses":
                [
                  {
                    "StatusCode": "200",
                    "ResponseParameters":
                      {
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true,
                      },
                    "ResponseModels": {},
                  },
                ],
              "RequestParameters": {},
              "Integration":
                {
                  "Type": "MOCK",
                  "RequestTemplates":
                    { "application/json": "{statusCode:200}" },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses":
                    [
                      {
                        "StatusCode": "200",
                        "ResponseParameters":
                          {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET'",
                          },
                        "ResponseTemplates": { "application/json": "" },
                      },
                    ],
                },
              "ResourceId": { "Ref": "ApiGatewayResourceSchedulers" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
            },
        },
      "ApiGatewayMethodCompanyPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceCompany" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompaniesGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceCompanies" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceCompanyCompanyidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarAssignPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarAssign" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyAssignPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceCompanyAssign" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompaniesEmployeeEmployeeidVarGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompaniesEmployeeEmployeeidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarContactPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarContact" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarContactContactidVarPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarContactContactidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarContactContactidVarEmailPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarContactContactidVarEmail",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarContactContactidVarEmailEmailidVarDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarContactContactidVarEmailEmailidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarEmployeeDashinteractionsPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarEmployeeDashinteractions",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarConvertPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarConvert" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarContactContactidVarDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarContactContactidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarNotesGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarNotes" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarNotesPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarNotes" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarNotesNotesidVarPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarNotesNotesidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarNotesNotesidVarDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceCompanyCompanyidVarNotesNotesidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailDashlistGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceEmailDashlist" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailDashlistPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceEmailDashlist" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailDashlistEmaillistidVarPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceEmailDashlistEmaillistidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailDashlistEmaillistidVarDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceEmailDashlistEmaillistidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodContactGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceContact" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarContactGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarContact" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodContactContactidVarGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceContactContactidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CompanyHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CompanyHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodCompanyCompanyidVarActivitiesGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceCompanyCompanyidVarActivities" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivitiesGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceActivities" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodMyDashactivitiesGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceMyDashactivities" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodTopDashactivitiesCompanyidVarGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceTopDashactivitiesCompanyidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodMyDashactivitiesDashbyDashstatusDashtimeGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceMyDashactivitiesDashbyDashstatusDashtime",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivitiesStaleGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceActivitiesStale" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivityActivityidVarGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceActivityActivityidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivityPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceActivity" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivityActivityidVarPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceActivityActivityidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivityActivityidVarStatusStatusVarPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceActivityActivityidVarStatusStatusVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivityActivityidVarDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceActivityActivityidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivityActivityidVarRemarksPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceActivityActivityidVarRemarks" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivityActivityidVarRemarksRemarksidVarPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceActivityActivityidVarRemarksRemarksidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodActivityActivityidVarRemarksRemarksidVarDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceActivityActivityidVarRemarksRemarksidVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ActivitiesHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ActivitiesHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodTeamPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceTeam" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["TeamHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["TeamHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodTeamGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceTeam" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["TeamHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["TeamHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodTeamTeamidVarGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceTeamTeamidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["TeamHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["TeamHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodTeamTeamidVarPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceTeamTeamidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["TeamHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["TeamHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodTeamTeamidVarDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceTeamTeamidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["TeamHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["TeamHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailsTemplatePost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceEmailsTemplate" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["EmailHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["EmailHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailsSendDashbulkPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceEmailsSendDashbulk" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["EmailHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["EmailHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailsTemplateTemplateidVarContentGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceEmailsTemplateTemplateidVarContent",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["EmailHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["EmailHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailsTemplateTemplateidVarGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceEmailsTemplateTemplateidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["EmailHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["EmailHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailsTemplatesGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceEmailsTemplates" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["EmailHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["EmailHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodSendDashemailPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceSendDashemail" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["EmailHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["EmailHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmailsDashbyDashcontactContactemailVarGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceEmailsDashbyDashcontactContactemailVar",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["EmailHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["EmailHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodNotificationGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceNotification" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["NotificationHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["NotificationHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodNotificationPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceNotification" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["NotificationHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["NotificationHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodNotificationIdVarGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceNotificationIdVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["NotificationHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["NotificationHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodNotificationPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceNotification" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["NotificationHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["NotificationHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodTokenDashgenerationPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceTokenDashgeneration" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CognitoOAuthHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CognitoOAuthHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodJobsImportdataPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceJobsImportdata" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt": ["ImportDataLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ImportDataLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodJobsBulkDashsignupPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceJobsBulkDashsignup" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["BulkCognitoSignupLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["BulkCognitoSignupLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodDynamoDashstreamPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceDynamoDashstream" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["StreamRecordHelperLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["StreamRecordHelperLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodPendingDashapprovalSendDashnotifPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourcePendingDashapprovalSendDashnotif" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                [
                                  "SendWebSocketNotificationLambdaFunction",
                                  "Arn",
                                ],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["SendWebSocketNotificationLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodPendingDashapprovalGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourcePendingDashapproval" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["GetMyPendingApprovalsLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["GetMyPendingApprovalsLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodPendingDashapprovalRequestidVarApproveDashrejectPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourcePendingDashapprovalRequestidVarApproveDashreject",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ApproveOrRejectRequestLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ApproveOrRejectRequestLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodReminderPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceReminder" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CreateReminderLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CreateReminderLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodReminderReminderidVarDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceReminderReminderidVar" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["DeleteReminderLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["DeleteReminderLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodReminderCleanupPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceReminderCleanup" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["DailyReminderCleanupLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["DailyReminderCleanupLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodWebsocketBroadcastPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceWebsocketBroadcast" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["BroadcastMessageLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["BroadcastMessageLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodWebsocketGetDashconnectionsGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceWebsocketGetDashconnections" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                [
                                  "GetAllWebSocketConnectionsLambdaFunction",
                                  "Arn",
                                ],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["GetAllWebSocketConnectionsLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodGoogleOauthPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceGoogleOauth" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["GoogleOauthHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["GoogleOauthHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodGoogleOauthCallbackGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceGoogleOauthCallback" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                [
                                  "GoogleOauthCallbackHandlerLambdaFunction",
                                  "Arn",
                                ],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["GoogleOauthCallbackHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodGoogleOauthExtendtokenPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceGoogleOauthExtendtoken" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                [
                                  "GoogleOauthExtendRefreshTokenLambdaFunction",
                                  "Arn",
                                ],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn":
            ["GoogleOauthExtendRefreshTokenLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodGoogleOauthGoogleoauthtokenscopePost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceGoogleOauthGoogleoauthtokenscope" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["GoogleOauthTokenScopeLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["GoogleOauthTokenScopeLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodGoogleCalendarsGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceGoogleCalendars" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["GetAllCalendarsLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["GetAllCalendarsLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodGoogleCalendarCalendaridVarMeetingPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceGoogleCalendarCalendaridVarMeeting",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CreateMeetingLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CreateMeetingLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodGoogleGmailCreateDashandDashsendDashemailPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                {
                  "Ref": "ApiGatewayResourceGoogleGmailCreateDashandDashsendDashemail",
                },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["CreateAndSendEmailLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["CreateAndSendEmailLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodBulkDashemailPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceBulkDashemail" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["SendBulkEmailsLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["SendBulkEmailsLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodReceiveDashemailDashtestPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceReceiveDashemailDashtest" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["ReceiveEmailHandlerLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["ReceiveEmailHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmployeesGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceEmployees" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["GetEmployeesLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["GetEmployeesLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodEmployeesDashsummaryGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceEmployeesDashsummary" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                [
                                  "GetEmployeesWorkSummaryLambdaFunction",
                                  "Arn",
                                ],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["GetEmployeesWorkSummaryLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodJobDashqueuePost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceJobDashqueue" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                [
                                  "SqsJobQueueInvokeHandlerLambdaFunction",
                                  "Arn",
                                ],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["SqsJobQueueInvokeHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodJobsBulkDashsignupDashprocessPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceJobsBulkDashsignupDashprocess" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                [
                                  "BulkImportUsersProcessHandlerLambdaFunction",
                                  "Arn",
                                ],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn":
            ["BulkImportUsersProcessHandlerLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodJobsBulkDashsignupDashuploadPost":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId":
                { "Ref": "ApiGatewayResourceJobsBulkDashsignupDashupload" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["UploadSignupBulkJobLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["UploadSignupBulkJobLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodSchedulerPut":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceScheduler" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["UpdateScheduleReminderLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["UpdateScheduleReminderLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodSchedulersGet":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceSchedulers" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["GetSchedulersLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["GetSchedulersLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodSchedulerDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceScheduler" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["DeleteScheduleReminderLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["DeleteScheduleReminderLambdaPermissionApiGateway"],
        },
      "ApiGatewayMethodSchedulersDelete":
        {
          "Type": "AWS::ApiGateway::Method",
          "Properties":
            {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": { "Ref": "ApiGatewayResourceSchedulers" },
              "RestApiId": { "Ref": "ApiGatewayRestApi" },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration":
                {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri":
                    {
                      "Fn::Join":
                        [
                          "",
                          [
                            "arn:",
                            { "Ref": "AWS::Partition" },
                            ":apigateway:",
                            { "Ref": "AWS::Region" },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt":
                                ["DeleteAllRemindersLambdaFunction", "Arn"],
                            },
                            "/invocations",
                          ],
                        ],
                    },
                },
              "MethodResponses": [],
            },
          "DependsOn": ["DeleteAllRemindersLambdaPermissionApiGateway"],
        },
      "ApiGatewayDeployment1684665913774":
        {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties":
            { "RestApiId": { "Ref": "ApiGatewayRestApi" }, "StageName": "dev" },
          "DependsOn":
            [
              "ApiGatewayMethodCompanyOptions",
              "ApiGatewayMethodCompaniesOptions",
              "ApiGatewayMethodCompanyCompanyidVarOptions",
              "ApiGatewayMethodCompanyCompanyidVarAssignOptions",
              "ApiGatewayMethodCompanyAssignOptions",
              "ApiGatewayMethodCompaniesEmployeeEmployeeidVarOptions",
              "ApiGatewayMethodCompanyCompanyidVarContactOptions",
              "ApiGatewayMethodCompanyCompanyidVarContactContactidVarOptions",
              "ApiGatewayMethodCompanyCompanyidVarContactContactidVarEmailOptions",
              "ApiGatewayMethodCompanyCompanyidVarContactContactidVarEmailEmailidVarOptions",
              "ApiGatewayMethodCompanyCompanyidVarEmployeeDashinteractionsOptions",
              "ApiGatewayMethodCompanyCompanyidVarConvertOptions",
              "ApiGatewayMethodCompanyCompanyidVarNotesOptions",
              "ApiGatewayMethodCompanyCompanyidVarNotesNotesidVarOptions",
              "ApiGatewayMethodEmailDashlistOptions",
              "ApiGatewayMethodEmailDashlistEmaillistidVarOptions",
              "ApiGatewayMethodContactOptions",
              "ApiGatewayMethodContactContactidVarOptions",
              "ApiGatewayMethodCompanyCompanyidVarActivitiesOptions",
              "ApiGatewayMethodActivitiesOptions",
              "ApiGatewayMethodMyDashactivitiesOptions",
              "ApiGatewayMethodTopDashactivitiesCompanyidVarOptions",
              "ApiGatewayMethodMyDashactivitiesDashbyDashstatusDashtimeOptions",
              "ApiGatewayMethodActivitiesStaleOptions",
              "ApiGatewayMethodActivityActivityidVarOptions",
              "ApiGatewayMethodActivityOptions",
              "ApiGatewayMethodActivityActivityidVarStatusStatusVarOptions",
              "ApiGatewayMethodActivityActivityidVarRemarksOptions",
              "ApiGatewayMethodActivityActivityidVarRemarksRemarksidVarOptions",
              "ApiGatewayMethodTeamOptions",
              "ApiGatewayMethodTeamTeamidVarOptions",
              "ApiGatewayMethodEmailsTemplateOptions",
              "ApiGatewayMethodEmailsSendDashbulkOptions",
              "ApiGatewayMethodEmailsTemplateTemplateidVarContentOptions",
              "ApiGatewayMethodEmailsTemplateTemplateidVarOptions",
              "ApiGatewayMethodEmailsTemplatesOptions",
              "ApiGatewayMethodSendDashemailOptions",
              "ApiGatewayMethodEmailsDashbyDashcontactContactemailVarOptions",
              "ApiGatewayMethodNotificationOptions",
              "ApiGatewayMethodNotificationIdVarOptions",
              "ApiGatewayMethodTokenDashgenerationOptions",
              "ApiGatewayMethodJobsImportdataOptions",
              "ApiGatewayMethodJobsBulkDashsignupOptions",
              "ApiGatewayMethodDynamoDashstreamOptions",
              "ApiGatewayMethodPendingDashapprovalSendDashnotifOptions",
              "ApiGatewayMethodPendingDashapprovalOptions",
              "ApiGatewayMethodPendingDashapprovalRequestidVarApproveDashrejectOptions",
              "ApiGatewayMethodReminderOptions",
              "ApiGatewayMethodReminderReminderidVarOptions",
              "ApiGatewayMethodReminderCleanupOptions",
              "ApiGatewayMethodWebsocketBroadcastOptions",
              "ApiGatewayMethodWebsocketGetDashconnectionsOptions",
              "ApiGatewayMethodGoogleOauthOptions",
              "ApiGatewayMethodGoogleOauthCallbackOptions",
              "ApiGatewayMethodGoogleOauthExtendtokenOptions",
              "ApiGatewayMethodGoogleOauthGoogleoauthtokenscopeOptions",
              "ApiGatewayMethodGoogleCalendarsOptions",
              "ApiGatewayMethodGoogleCalendarCalendaridVarMeetingOptions",
              "ApiGatewayMethodGoogleGmailCreateDashandDashsendDashemailOptions",
              "ApiGatewayMethodBulkDashemailOptions",
              "ApiGatewayMethodReceiveDashemailDashtestOptions",
              "ApiGatewayMethodEmployeesOptions",
              "ApiGatewayMethodEmployeesDashsummaryOptions",
              "ApiGatewayMethodJobDashqueueOptions",
              "ApiGatewayMethodJobsBulkDashsignupDashprocessOptions",
              "ApiGatewayMethodJobsBulkDashsignupDashuploadOptions",
              "ApiGatewayMethodSchedulerOptions",
              "ApiGatewayMethodSchedulersOptions",
              "ApiGatewayMethodCompanyPost",
              "ApiGatewayMethodCompaniesGet",
              "ApiGatewayMethodCompanyCompanyidVarGet",
              "ApiGatewayMethodCompanyCompanyidVarPut",
              "ApiGatewayMethodCompanyCompanyidVarDelete",
              "ApiGatewayMethodCompanyCompanyidVarAssignPut",
              "ApiGatewayMethodCompanyAssignPut",
              "ApiGatewayMethodCompaniesEmployeeEmployeeidVarGet",
              "ApiGatewayMethodCompanyCompanyidVarContactPost",
              "ApiGatewayMethodCompanyCompanyidVarContactContactidVarPut",
              "ApiGatewayMethodCompanyCompanyidVarContactContactidVarEmailPost",
              "ApiGatewayMethodCompanyCompanyidVarContactContactidVarEmailEmailidVarDelete",
              "ApiGatewayMethodCompanyCompanyidVarEmployeeDashinteractionsPut",
              "ApiGatewayMethodCompanyCompanyidVarConvertPut",
              "ApiGatewayMethodCompanyCompanyidVarContactContactidVarDelete",
              "ApiGatewayMethodCompanyCompanyidVarNotesGet",
              "ApiGatewayMethodCompanyCompanyidVarNotesPost",
              "ApiGatewayMethodCompanyCompanyidVarNotesNotesidVarPut",
              "ApiGatewayMethodCompanyCompanyidVarNotesNotesidVarDelete",
              "ApiGatewayMethodEmailDashlistGet",
              "ApiGatewayMethodEmailDashlistPost",
              "ApiGatewayMethodEmailDashlistEmaillistidVarPut",
              "ApiGatewayMethodEmailDashlistEmaillistidVarDelete",
              "ApiGatewayMethodContactGet",
              "ApiGatewayMethodCompanyCompanyidVarContactGet",
              "ApiGatewayMethodContactContactidVarGet",
              "ApiGatewayMethodCompanyCompanyidVarActivitiesGet",
              "ApiGatewayMethodActivitiesGet",
              "ApiGatewayMethodMyDashactivitiesGet",
              "ApiGatewayMethodTopDashactivitiesCompanyidVarGet",
              "ApiGatewayMethodMyDashactivitiesDashbyDashstatusDashtimeGet",
              "ApiGatewayMethodActivitiesStaleGet",
              "ApiGatewayMethodActivityActivityidVarGet",
              "ApiGatewayMethodActivityPost",
              "ApiGatewayMethodActivityActivityidVarPut",
              "ApiGatewayMethodActivityActivityidVarStatusStatusVarPut",
              "ApiGatewayMethodActivityActivityidVarDelete",
              "ApiGatewayMethodActivityActivityidVarRemarksPost",
              "ApiGatewayMethodActivityActivityidVarRemarksRemarksidVarPut",
              "ApiGatewayMethodActivityActivityidVarRemarksRemarksidVarDelete",
              "ApiGatewayMethodTeamPost",
              "ApiGatewayMethodTeamGet",
              "ApiGatewayMethodTeamTeamidVarGet",
              "ApiGatewayMethodTeamTeamidVarPut",
              "ApiGatewayMethodTeamTeamidVarDelete",
              "ApiGatewayMethodEmailsTemplatePost",
              "ApiGatewayMethodEmailsSendDashbulkPost",
              "ApiGatewayMethodEmailsTemplateTemplateidVarContentGet",
              "ApiGatewayMethodEmailsTemplateTemplateidVarGet",
              "ApiGatewayMethodEmailsTemplatesGet",
              "ApiGatewayMethodSendDashemailPost",
              "ApiGatewayMethodEmailsDashbyDashcontactContactemailVarGet",
              "ApiGatewayMethodNotificationGet",
              "ApiGatewayMethodNotificationPost",
              "ApiGatewayMethodNotificationIdVarGet",
              "ApiGatewayMethodNotificationPut",
              "ApiGatewayMethodTokenDashgenerationPost",
              "ApiGatewayMethodJobsImportdataPost",
              "ApiGatewayMethodJobsBulkDashsignupPost",
              "ApiGatewayMethodDynamoDashstreamPost",
              "ApiGatewayMethodPendingDashapprovalSendDashnotifPost",
              "ApiGatewayMethodPendingDashapprovalGet",
              "ApiGatewayMethodPendingDashapprovalRequestidVarApproveDashrejectPost",
              "ApiGatewayMethodReminderPost",
              "ApiGatewayMethodReminderReminderidVarDelete",
              "ApiGatewayMethodReminderCleanupPost",
              "ApiGatewayMethodWebsocketBroadcastPost",
              "ApiGatewayMethodWebsocketGetDashconnectionsGet",
              "ApiGatewayMethodGoogleOauthPost",
              "ApiGatewayMethodGoogleOauthCallbackGet",
              "ApiGatewayMethodGoogleOauthExtendtokenPost",
              "ApiGatewayMethodGoogleOauthGoogleoauthtokenscopePost",
              "ApiGatewayMethodGoogleCalendarsGet",
              "ApiGatewayMethodGoogleCalendarCalendaridVarMeetingPost",
              "ApiGatewayMethodGoogleGmailCreateDashandDashsendDashemailPost",
              "ApiGatewayMethodBulkDashemailPost",
              "ApiGatewayMethodReceiveDashemailDashtestPost",
              "ApiGatewayMethodEmployeesGet",
              "ApiGatewayMethodEmployeesDashsummaryGet",
              "ApiGatewayMethodJobDashqueuePost",
              "ApiGatewayMethodJobsBulkDashsignupDashprocessPost",
              "ApiGatewayMethodJobsBulkDashsignupDashuploadPost",
              "ApiGatewayMethodSchedulerPut",
              "ApiGatewayMethodSchedulersGet",
              "ApiGatewayMethodSchedulerDelete",
              "ApiGatewayMethodSchedulersDelete",
            ],
        },
      "CompanyHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["CompanyHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "ActivitiesHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["ActivitiesHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "TeamHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["TeamHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "EmailHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["EmailHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "NotificationHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["NotificationHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "CognitoOAuthHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["CognitoOAuthHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "ImportDataLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["ImportDataLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "BulkCognitoSignupLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["BulkCognitoSignupLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "StreamRecordHelperLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["StreamRecordHelperLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "SendWebSocketNotificationLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt":
                    ["SendWebSocketNotificationLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GetMyPendingApprovalsLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt": ["GetMyPendingApprovalsLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "ApproveOrRejectRequestLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt": ["ApproveOrRejectRequestLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "CreateReminderLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["CreateReminderLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "DeleteReminderLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["DeleteReminderLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "DailyReminderCleanupLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["DailyReminderCleanupLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "BroadcastMessageLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["BroadcastMessageLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GetAllWebSocketConnectionsLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt":
                    ["GetAllWebSocketConnectionsLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GoogleOauthHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["GoogleOauthHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GoogleOauthCallbackHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt":
                    ["GoogleOauthCallbackHandlerLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GoogleOauthExtendRefreshTokenLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt":
                    ["GoogleOauthExtendRefreshTokenLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GoogleOauthTokenScopeLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt": ["GoogleOauthTokenScopeLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GetAllCalendarsLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["GetAllCalendarsLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "CreateMeetingLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["CreateMeetingLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "CreateAndSendEmailLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["CreateAndSendEmailLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "SendBulkEmailsLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["SendBulkEmailsLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "ReceiveEmailHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["ReceiveEmailHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GetEmployeesLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["GetEmployeesLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GetEmployeesWorkSummaryLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt":
                    ["GetEmployeesWorkSummaryLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "SqsJobQueueInvokeHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt":
                    ["SqsJobQueueInvokeHandlerLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "BulkImportUsersProcessHandlerLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt":
                    ["BulkImportUsersProcessHandlerLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "UploadSignupBulkJobLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["UploadSignupBulkJobLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "UpdateScheduleReminderLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt": ["UpdateScheduleReminderLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "GetSchedulersLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["GetSchedulersLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "DeleteScheduleReminderLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                {
                  "Fn::GetAtt": ["DeleteScheduleReminderLambdaFunction", "Arn"],
                },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "DeleteAllRemindersLambdaPermissionApiGateway":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["DeleteAllRemindersLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":execute-api:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":",
                        { "Ref": "ApiGatewayRestApi" },
                        "/*/*",
                      ],
                    ],
                },
            },
        },
      "WebsocketsApi":
        {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties":
            {
              "Name": "dev-gel-api-websockets",
              "RouteSelectionExpression": "$request.body.action",
              "Description": "Serverless Websockets",
              "ProtocolType": "WEBSOCKET",
            },
        },
      "WebSocketHandlerWebsocketsIntegration":
        {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties":
            {
              "ApiId": { "Ref": "WebsocketsApi" },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri":
                {
                  "Fn::Join":
                    [
                      "",
                      [
                        "arn:",
                        { "Ref": "AWS::Partition" },
                        ":apigateway:",
                        { "Ref": "AWS::Region" },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt":
                            ["WebSocketHandlerLambdaFunction", "Arn"],
                        },
                        "/invocations",
                      ],
                    ],
                },
            },
        },
      "WebSocketHandlerLambdaPermissionWebsockets":
        {
          "Type": "AWS::Lambda::Permission",
          "DependsOn": ["WebsocketsApi", "WebSocketHandlerLambdaFunction"],
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["WebSocketHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
            },
        },
      "SconnectWebsocketsRoute":
        {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties":
            {
              "ApiId": { "Ref": "WebsocketsApi" },
              "RouteKey": "$connect",
              "AuthorizationType": "NONE",
              "Target":
                {
                  "Fn::Join":
                    [
                      "/",
                      [
                        "integrations",
                        { "Ref": "WebSocketHandlerWebsocketsIntegration" },
                      ],
                    ],
                },
            },
        },
      "SdisconnectWebsocketsRoute":
        {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties":
            {
              "ApiId": { "Ref": "WebsocketsApi" },
              "RouteKey": "$disconnect",
              "AuthorizationType": "NONE",
              "Target":
                {
                  "Fn::Join":
                    [
                      "/",
                      [
                        "integrations",
                        { "Ref": "WebSocketHandlerWebsocketsIntegration" },
                      ],
                    ],
                },
            },
        },
      "SdefaultWebsocketsRoute":
        {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties":
            {
              "ApiId": { "Ref": "WebsocketsApi" },
              "RouteKey": "$default",
              "AuthorizationType": "NONE",
              "Target":
                {
                  "Fn::Join":
                    [
                      "/",
                      [
                        "integrations",
                        { "Ref": "WebSocketHandlerWebsocketsIntegration" },
                      ],
                    ],
                },
            },
        },
      "WebsocketsDeploymentStage":
        {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties":
            {
              "ApiId": { "Ref": "WebsocketsApi" },
              "StageName": "dev",
              "Description": "Serverless Websockets",
              "DeploymentId":
                {
                  "Ref": "WebsocketsDeployment3jq6gd5k45wtmUFEJSTNNB0oXlEHasYNoDDF68l7IDM",
                },
            },
        },
      "WebsocketsDeployment3jq6gd5k45wtmUFEJSTNNB0oXlEHasYNoDDF68l7IDM":
        {
          "Type": "AWS::ApiGatewayV2::Deployment",
          "DependsOn":
            [
              "SconnectWebsocketsRoute",
              "SdisconnectWebsocketsRoute",
              "SdefaultWebsocketsRoute",
            ],
          "Properties":
            {
              "ApiId": { "Ref": "WebsocketsApi" },
              "Description": "Serverless Websockets",
            },
        },
      "CognitoUserPoolCacentral10BjGZxtC1":
        {
          "Type": "AWS::Cognito::UserPool",
          "Properties":
            {
              "UserPoolName": "ca-central-1_0BjGZxtC1",
              "LambdaConfig":
                {
                  "PreTokenGeneration":
                    {
                      "Fn::GetAtt":
                        ["CognitoOAuthHandlerLambdaFunction", "Arn"],
                    },
                },
            },
          "DependsOn": ["CognitoOAuthHandlerLambdaFunction"],
        },
      "CognitoOAuthHandlerLambdaPermissionCognitoUserPoolCacentral10BjGZxtC1TriggerSourcePreTokenGeneration":
        {
          "Type": "AWS::Lambda::Permission",
          "Properties":
            {
              "FunctionName":
                { "Fn::GetAtt": ["CognitoOAuthHandlerLambdaFunction", "Arn"] },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn":
                { "Fn::GetAtt": ["CognitoUserPoolCacentral10BjGZxtC1", "Arn"] },
            },
        },
      "SqsJobQueueInvokeHandlerEventSourceMappingSQSJobqueuedev":
        {
          "Type": "AWS::Lambda::EventSourceMapping",
          "DependsOn": ["IamRoleLambdaExecution"],
          "Properties":
            {
              "BatchSize": 10,
              "EventSourceArn": "arn:aws:sqs:ca-central-1:524073432557:job-queue-dev",
              "FunctionName":
                {
                  "Fn::GetAtt":
                    ["SqsJobQueueInvokeHandlerLambdaFunction", "Arn"],
                },
              "Enabled": true,
            },
        },
      "MyBucketPolicy":
        {
          "Type": "AWS::S3::BucketPolicy",
          "Properties":
            {
              "Bucket": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
              "PolicyDocument":
                {
                  "Statement":
                    [
                      {
                        "Sid": "AllowLambdaToPutObjects",
                        "Effect": "Allow",
                        "Principal": { "Service": "lambda.amazonaws.com" },
                        "Action": "s3:PutObject",
                        "Resource": "arn:aws:s3:::gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz/jobs/*",
                      },
                    ],
                },
            },
        },
      "JobQueue":
        {
          "Type": "AWS::SQS::Queue",
          "Properties": { "QueueName": "job-queue-dev" },
        },
    },
  "Outputs":
    {
      "ServerlessDeploymentBucketName":
        {
          "Value": "gel-api-dev-serverlessdeploymentbucket-d34v77eas9bz",
          "Export":
            { "Name": "sls-gel-api-dev-ServerlessDeploymentBucketName" },
        },
      "ActivitiesHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "ActivitiesHandlerLambdaVersione3jGEQAFxIPpyshFa3UzajtuxkmRPXXtcYn34S9qI",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-ActivitiesHandlerLambdaFunctionQualifiedArn",
            },
        },
      "TeamHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "TeamHandlerLambdaVersiondUlovsCiCXBfLZPeradmc12aerpgQPMcpDmLDTjSA",
            },
          "Export":
            { "Name": "sls-gel-api-dev-TeamHandlerLambdaFunctionQualifiedArn" },
        },
      "CompanyHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "CompanyHandlerLambdaVersionS2nhditUn3WDxADsJ8mtsZYcObBfyvTcT2AXDGXbcE",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-CompanyHandlerLambdaFunctionQualifiedArn",
            },
        },
      "NotificationHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "NotificationHandlerLambdaVersion0cxyGJz49OXyHkiXC4w5KFY2GGy5mRaMLEIN1PujxBk",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-NotificationHandlerLambdaFunctionQualifiedArn",
            },
        },
      "CognitoOAuthHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "CognitoOAuthHandlerLambdaVersionVEuaNrJtS7ESoc2ucjlC2m01R9XFuWRoeDYkLAaP1tM",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-CognitoOAuthHandlerLambdaFunctionQualifiedArn",
            },
        },
      "BulkCognitoSignupLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "BulkCognitoSignupLambdaVersionsEPlfTpreEQw1RuzEoDFQ8lGXN152s8eVQGyJ3fE4A",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-BulkCognitoSignupLambdaFunctionQualifiedArn",
            },
        },
      "SendWebSocketNotificationLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "SendWebSocketNotificationLambdaVersionJDW2gCME4jBUnqOMnNiEobCb5tIgOXm53DILwyMlw",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-SendWebSocketNotificationLambdaFunctionQualifiedArn",
            },
        },
      "GetMyPendingApprovalsLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GetMyPendingApprovalsLambdaVersiontMLkzPyX3bmT0cm6V21gAhMqqqQBabiwSxFRrfakeU",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GetMyPendingApprovalsLambdaFunctionQualifiedArn",
            },
        },
      "ApproveOrRejectRequestLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "ApproveOrRejectRequestLambdaVersionTOdaUatenz1tC7NsTZUNrPFrLypMDCdXZKHSFPxYk",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-ApproveOrRejectRequestLambdaFunctionQualifiedArn",
            },
        },
      "HandleEBSchedulerLambdaInvokeLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "HandleEBSchedulerLambdaInvokeLambdaVersionbTjarUYUAtVSW9n9PdRNqfLT9QOVF5a3rlz9T1RYKJM",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-HandleEBSchedulerLambdaInvokeLambdaFunctionQualifiedArn",
            },
        },
      "CreateReminderLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "CreateReminderLambdaVersionTtsvLcTcOIgPNLvbGDg7vg4SSMH9Ho0mIbsxPPxYoU",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-CreateReminderLambdaFunctionQualifiedArn",
            },
        },
      "DeleteReminderLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "DeleteReminderLambdaVersioncSd544vbsq52cYRqyABYeahlucgAPFZSOQfHAwofHAI",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-DeleteReminderLambdaFunctionQualifiedArn",
            },
        },
      "DailyReminderCleanupLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "DailyReminderCleanupLambdaVersionJFZlaO6tHSSbd87i5TswgjwxVTMJXLb049EKJWYLB0",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-DailyReminderCleanupLambdaFunctionQualifiedArn",
            },
        },
      "BroadcastMessageLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "BroadcastMessageLambdaVersionj7aaEYzrA7G0R8A2SZX3kTcHXMXOsdiMMzFPIhoYZMs",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-BroadcastMessageLambdaFunctionQualifiedArn",
            },
        },
      "WebSocketHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "WebSocketHandlerLambdaVersionO8FYIPt8KPRu59FAZ68lXUVY7YvtJKSWjI7ednUo",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-WebSocketHandlerLambdaFunctionQualifiedArn",
            },
        },
      "GoogleOauthHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GoogleOauthHandlerLambdaVersionnPA1c6dXCyIiCTvzC37OMMRTSqX7Jsbm7ADFr8DFE",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GoogleOauthHandlerLambdaFunctionQualifiedArn",
            },
        },
      "GoogleOauthExtendRefreshTokenLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GoogleOauthExtendRefreshTokenLambdaVersionGDvRn6b1d8amx7eW22iCjauAgTjcgtjKA8XDJaMU",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GoogleOauthExtendRefreshTokenLambdaFunctionQualifiedArn",
            },
        },
      "GoogleOauthCallbackHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GoogleOauthCallbackHandlerLambdaVersionn2R9Vq3fDhOWE5eDbU4PqwNtS2nnZRC7jk6d4hsozec",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GoogleOauthCallbackHandlerLambdaFunctionQualifiedArn",
            },
        },
      "GoogleOauthTokenScopeLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GoogleOauthTokenScopeLambdaVersionYoqVsgFUM9orX8MnTQCChabDyT4oEflyMMZmpjJIZF8",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GoogleOauthTokenScopeLambdaFunctionQualifiedArn",
            },
        },
      "GetAllWebSocketConnectionsLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GetAllWebSocketConnectionsLambdaVersionIYH1KO7upwqxge90e1FJO5ARS6AiDypQjFZGbtJevY",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GetAllWebSocketConnectionsLambdaFunctionQualifiedArn",
            },
        },
      "GetAllCalendarsLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GetAllCalendarsLambdaVersionmFQVR0mECVszpVidfuWM9UVKYPOrljUmk8Qktd9ugo",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GetAllCalendarsLambdaFunctionQualifiedArn",
            },
        },
      "CreateAndSendEmailLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "CreateAndSendEmailLambdaVersionCznMWNSCicIsZkoeggBUkZGwTa38wd7Du6se7TweA",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-CreateAndSendEmailLambdaFunctionQualifiedArn",
            },
        },
      "CreateMeetingLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "CreateMeetingLambdaVersiong0DN6akY1Tbp73IncJfSb4RzE7DGBWTShck64k",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-CreateMeetingLambdaFunctionQualifiedArn",
            },
        },
      "ReceiveEmailHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "ReceiveEmailHandlerLambdaVersion8xZDKtammL0OvKFF3efAK3AymiP0QqGcyIvCzzXa48A",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-ReceiveEmailHandlerLambdaFunctionQualifiedArn",
            },
        },
      "GetEmployeesLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GetEmployeesLambdaVersion1iF9rkxVWgNx6JYXocjvzlgQPciUkeYIsu93dZfs",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GetEmployeesLambdaFunctionQualifiedArn",
            },
        },
      "GetEmployeesWorkSummaryLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GetEmployeesWorkSummaryLambdaVersionMHhN0OrEAhibqbWBi5kcJ8cJhxhrCv0HZxA4p9KKqg",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GetEmployeesWorkSummaryLambdaFunctionQualifiedArn",
            },
        },
      "SendBulkEmailsLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "SendBulkEmailsLambdaVersionuZ5OABIiPX5pJkar0oTsusvPlVnpoDMsjr3NjldH3ok",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-SendBulkEmailsLambdaFunctionQualifiedArn",
            },
        },
      "BulkImportUsersProcessHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "BulkImportUsersProcessHandlerLambdaVersionFwNcVCO7xuvINWwApIeqE2WTCpUfwcyfLMffXBFtg",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-BulkImportUsersProcessHandlerLambdaFunctionQualifiedArn",
            },
        },
      "UploadSignupBulkJobLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "UploadSignupBulkJobLambdaVersionPL4dbFoRAr4myoLXtZfuvqWdNhZXa8IEOGZVNoGojY",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-UploadSignupBulkJobLambdaFunctionQualifiedArn",
            },
        },
      "UpdateScheduleReminderLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "UpdateScheduleReminderLambdaVersionbrzQYpMhC7GDzAtVWUo2WKgkfWdZjghNBOosb6tbpPo",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-UpdateScheduleReminderLambdaFunctionQualifiedArn",
            },
        },
      "GetSchedulersLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GetSchedulersLambdaVersionacrGotWgzRCQqayZiLL7SVwa53YYNGXEAgOMUFDtYUU",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GetSchedulersLambdaFunctionQualifiedArn",
            },
        },
      "GetSchedulerGroupsLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "GetSchedulerGroupsLambdaVersionjfLB2GvyTe7qAVkkambM2Npr1shzOzDrbpCzyHtXSmg",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-GetSchedulerGroupsLambdaFunctionQualifiedArn",
            },
        },
      "DeleteAllRemindersLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "DeleteAllRemindersLambdaVersioni7wQlt5gfA7v3mcE267hYfZqKD0QoZhB2qAtNzEw",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-DeleteAllRemindersLambdaFunctionQualifiedArn",
            },
        },
      "DeleteScheduleReminderLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "DeleteScheduleReminderLambdaVersionNuebn7UMSm34NxMxlmi3vISwE4CPu8QvSWJBjhNY9A",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-DeleteScheduleReminderLambdaFunctionQualifiedArn",
            },
        },
      "EmailHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "EmailHandlerLambdaVersionBCb7Szc8ikuwhybahBbwPhjaYXmXom8Icc2dpFjvvvM",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-EmailHandlerLambdaFunctionQualifiedArn",
            },
        },
      "StreamRecordHelperLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "StreamRecordHelperLambdaVersionvyFNcnsy0CPhIE5BNnbJ9NFNn8WedcyUKAL7pS7Eb4",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-StreamRecordHelperLambdaFunctionQualifiedArn",
            },
        },
      "HandleDynamoStreamRecordsLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "HandleDynamoStreamRecordsLambdaVersionqnYfaybUmjRd3eSmCeejXRSqFLsaESaqKNiIDahsTzQ",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-HandleDynamoStreamRecordsLambdaFunctionQualifiedArn",
            },
        },
      "SqsJobQueueInvokeHandlerLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "SqsJobQueueInvokeHandlerLambdaVersionXjPGJ14Np0px9rJolwZ1Q7TafCMa1fCRefR6wyA6Q",
            },
          "Export":
            {
              "Name": "sls-gel-api-dev-SqsJobQueueInvokeHandlerLambdaFunctionQualifiedArn",
            },
        },
      "ImportDataLambdaFunctionQualifiedArn":
        {
          "Description": "Current Lambda function version",
          "Value":
            {
              "Ref": "ImportDataLambdaVersionH4TlO4Q7zUFHXezaDD2BtjiYM2Sx0L9zudDzAjfqKMc",
            },
          "Export":
            { "Name": "sls-gel-api-dev-ImportDataLambdaFunctionQualifiedArn" },
        },
      "ServiceEndpoint":
        {
          "Description": "URL of the service endpoint",
          "Value":
            {
              "Fn::Join":
                [
                  "",
                  [
                    "https://",
                    { "Ref": "ApiGatewayRestApi" },
                    ".execute-api.",
                    { "Ref": "AWS::Region" },
                    ".",
                    { "Ref": "AWS::URLSuffix" },
                    "/dev",
                  ],
                ],
            },
          "Export": { "Name": "sls-gel-api-dev-ServiceEndpoint" },
        },
      "ServiceEndpointWebsocket":
        {
          "Description": "URL of the service endpoint",
          "Value":
            {
              "Fn::Join":
                [
                  "",
                  [
                    "wss://",
                    { "Ref": "WebsocketsApi" },
                    ".execute-api.",
                    { "Ref": "AWS::Region" },
                    ".",
                    { "Ref": "AWS::URLSuffix" },
                    "/dev",
                  ],
                ],
            },
          "Export": { "Name": "sls-gel-api-dev-ServiceEndpointWebsocket" },
        },
      "GelDashapiDashdevDashnodejsDashdefaultLambdaLayerQualifiedArn":
        {
          "Value": "arn:aws:lambda:ca-central-1:524073432557:layer:gel-api-dev-nodejs-default:28",
          "Export":
            {
              "Name": "GelDashapiDashdevDashnodejsDashdefaultLambdaLayerQualifiedArn",
            },
        },
    },
}
